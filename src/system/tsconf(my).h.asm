;---------------------------------------
; CLi² (Command Line Interface)
; 2013,2014 © breeze/fishbone crew
;---------------------------------------
; TS-Labs Configuration API Header
;---------------------------------------

tsVConfig	equ	#00af	; задать видео режим (разрешение + тип)
				; i: A - видео режим
				;   [7-6]: %00 - 256x192
				;          %01 - 320x200
				;          %10 - 320x240
				;          %11 - 360x288
				;   [5]:   Скрыть(1) / Отображать(0) планарную графику («бордер на весь экран © Koshi»)
				;   [4]:   Скрыть(1) / Отображать(0) графику TSU (Спрайты, тайлы)
				;   [3-2]: %00 - reserved
				;   [1-0]: %00 - ZX
				;          %01 - 16c
				;          %10 - 256c
				;          %11 - txt

tsStatus	equ	#00af	; получить данные конфигурации:
				; o: A - версия прошивки
				;   [6]:   данный бит выставляется в 1 после старта компьютера и означает, что прошивку
				;          только что загрузили в альтеру. после прочтения сбрасывается в 0. TS-BIOS
				;          использует данный бит для инициализации дисководов.
				;   [1-0]: %00 2-bit VDAC + PWM levels 0-24 - обычный режим PentEvo 2бита на цвет + шим
				;          %01 3-bit VDAC - зарезервировано для других версий конфигураций
				;          %10 4-bit VDAC - зарезервировано для других версий конфигураций
				;          %11 5-bit VDAC - 5 бит на цвет (реализовано в плате IDE VideoDAC)

tsVpage		equ	#01af	; задать начальную страницу видеопамяти
				; i: A - номер банки памяти 

				; задать смещение графики по оси Х(0-511):
				; i: A
tsGXoffsL	equ	#02af	;   [7-0]: младшая часть
tsGXoffsH	equ	#03af	;   [0]:   старшая часть

				; задать смещение графики по оси Y(0-511):
				; i: A
tsGYoffsL	equ	#04af	;   [7-0]: младшая часть
tsGYoffsH	equ	#05af	;   [0]:   старшая часть

tsConfig	equ	#06af	; задать конфигурацию:
				; i: A
				;   [7]:   Разрешить(1) / Запретить(0) отображение спрайтов
				;   [6]:   Разрешить(1) / Запретить(0) отображение тайловой плоскости 1
				;   [5]:   Разрешить(1) / Запретить(0) отображение тайловой плоскости 0
				;   [4]:   Задаёт режим работы Z80 (низкий приоритет):
				;          0 - TSU работает параллельно с Z80 и имеет низкий приоритет доступа к памяти
				;          1 - Z80 будет остановлен при одновременном доступе к памяти
				;   [3]:   Разрешить(1) / Запретить(0) отображение тайла с номером 0 для плоскости 1
				;   [2]:   Разрешить(1) / Запретить(0) отображение тайла с номером 0 для плоскости 0  

tsPalSel	equ	#07af	; задать палитру для режима 16 цветов:
				; i: A
				;    	   номер сета (0-3) палитр (старшие 2 бита):
				;   [7-6]: для тайловой плоскости 1
				;   [5-4]: для тайловой плоскости 0
				;          остальные (младшие 2 бита) задаются в описателе (дескрипторе) тайла (биты 5 и 4)
				;                                                                      подробнее в tsTMPage
				;
				;   [3-0]:  номер палитры для тесктового или графического режима (одна из 16-ти палитр)

;		equ	#08af	; reserved
;		equ	#09af	; reserved
;		equ	#0aaf	; reserved
;		equ	#0baf	; reserved
;		equ	#0caf	; reserved
;		equ	#0daf	; reserved
;		equ	#0eaf	; reserved

tsBorder	equ	#0faf	; задать цвет бордера
				; i: A - любой номер цвета из палитры от 0 до 255

				; задать страницу памяти в адресное окно:
tsRAMPage0	equ	#10af	;	с #0000 (необходимо предварительно разрешить использование в tsMemConfig!)
tsRAMPage1	equ	#11af	; 	с #4000
tsRAMPage2	equ	#12af	; 	с #8000
tsRAMPage3	equ	#13af	; 	с #с000
				; i: A - номер банки памяти

tsFMAddr	equ	#15af	; проецирует для записи на адресное пространство #0000 данные для палитры (512 байт)
				; и данных для спрайтов (Sfile) 85 * 6 = 510 байт
				; i: A
				;   [4]:    Разрешить(1) / Запретить(0) данный режим
				;
				;   Палитра представляет собой группы по 16 цветов. Номер используемой группы задаётся через tsPalSel.
				;   Описатель одного цвета состоит из 2х байт (%xRRrrrGGgggBBbbb). Где капсом выделены биты «чистых» цветов
				;   без использования шим.
				;
				;   На описание одного спрайта в Sfile отводится 6 байт и имеет следующую структуру:
				; 0:       [7-0] - младшие 8bit координаты Y (0-255px)
				; 1:       [7]   - спрайт отобразить зеркально по горизонтали (Y)
				;          [6]   - если 1, то данный спрайт последний в текущем слое. (для перехода по слоям)
				;          [5]   - если 1, то спрайт активен (показывается)
				;          [4]   - reserved
				;          [3-1] - высота спрайта в блоках по 8px (максимально 64px), 0=8px, 1=16px, 2=24px итд.
				;          [0]   - старший бит координаты Y (> 256px)
				; 2:       [7-0] - младшие 8bit координаты X (0-255px)
				; 3:       [7]   - спрайт отобразить зеркально по вертикали (X)
				;          [5-4] - reserved
				;          [3-1] - ширина спрайта в блоках по 8px (максимально 64px), 0=8px, 1=16px, 2=24px итд.
				;          [0]   - старший бит координаты X (> 256px)
				;          далее следует смещение в bitmap относительно левого верхнего угла спрайта:
				; 4:       [7-6] - смещение в bitmap, позиция Y (младшая часть) в блоках по 8px
				;          [5-0] - смещение в bitmap, позиция X в блоках по 8px
				; 5:       [7-4] - номер группы палитры (0-15) для спрайта
				;          [5-0] - смещение в bitmap, позиция Y (старшая часть) в блоках по 8px


tsTMPage	equ	#16af	; задать страницу памяти для карты тайлов (длинной: 4096 * 2 = 8192 байт)
				; i: A - номер банки памяти
				;        карта состоит из описателей mайлов, где каждый описатель тайла и имеет структуру (2 байта):
				;          [7-0] - младшая часть номера отображаемого тайла
				;          [7]   - тайл отобразить зеркально по горизонтали (Y)
				;          [6]   - тайл отобразить зеркально по вертикали (X)
				;          [5-4] - младшие 2 бита палитры (старшие 2 задаются в tsPalSel)
				;          [3-0] - старшая часть номера отображаемого тайла (всего #0fff — 4096 тайлов, включая 0й)

				; Bitmap представляет собой изображение 512x512px. Для описания одной точки отводится 4bit (16 цветов)
				; и занимает 131072Кб или 8 банков памяти.
tsT0GPage	equ	#17af	; задать начальную страницу памяти bitmap для тайлов 0.
				; i: A - номер начальной банки памяти

tsT1GPage	equ	#18af	; задать начальную страницу памяти bitmap для тайлов 1
				; i: A - номер начальной банки памяти

tsSGPage	equ	#19af	; задать начальную страницу памяти bitmap для спрайтов
				; i: A - номер банки памяти

				; задать источник для DMA операции:
				; i: A
tsDMAsAddrL	equ	#1aaf	;          [7-1] младшая часть смещения от начала банки (кратная 2м!!)
tsDMAsAddrH	equ	#1baf	;	   [5-0] старшая часть смещения от начала банки (итого максимальный отступ #3ffx)
tsDMAsAddrX	equ	#1caf	; номер банки памяти

				; задать получатель для DMA операции:
				; i: A
tsDMAdAddrL	equ	#1daf	;          [7-1] младшая часть смещения от начала банки (кратная 2м!!)
tsDMAdAddrH	equ	#1eaf	;	   [5-0] старшая часть смещения от начала банки (итого максимальный отступ #3ffx)
tsDMAdAddrX	equ	#1faf	; номер банки памяти

tsSysConfig	equ	#20af	; задать конфигурацию системы:
				; i: A
				;   [2]:    Разрешить(1) / Запретить(0) кеш. При разрешении, так же выставляются биты в tsCacheConfig 
				;   [1-0]:  Задать частоту z80:
				;		%00	3.5Mhz
				;		%01	7.0Mhz
				;		%10	14.0Mhz
				;		%11	reserved

tsMemConfig	equ	#21af	; задать конфигурацию памяти:
				; i: A
				;   [7-6]:  Задать тип блокировки памяти:
				;		%00	512k
				;		%01	128k
				;		%10	Auto
				;		%11	1024k
				;   [3]:    Разрешить(1) / Запретить(0) запись с #0000
				;   [2]:    Установить режим ОЗУ(1) или режим ПЗУ(0):
				;           Если задан режим ПЗУ, то:
				;   [1-0]:	%00	Service
				;		%01	DOS
				;		%10	128
				;		%11	48
				;	    Если задан режим ОЗУ, то:
				;   [1]:	0 - WP / 1 - WE (for ROM and RAM) ???
				;   [0]:	Is the same as bit4 in #7FFD ???

tsHsInt		equ	#22af	; задать горизонтальную позицию INT
				; i: A - значение от 0 до 223
				;        если больше 223 — то выключено

tsVsIntL	equ	#23af   ; задать вертикальную позицию INT
				; i: A - младшая часть
tsVsIntH	equ	#24af	; i: A
				;   [7-4]:  (не реализовано!) автоматическое увеличение +(0-15) 
				;   [0]:    старшая часть

tsDMAlen	equ	#26af	; задать размер блока (бурста) передаваемых данных 
				; i: A - длина в ???

tsDMActr	equ	#27af	; управление DMA
				; i: A
				;   [7]:   флаг ~R/W (используется ниже совместно с битами 2-0)
				;   [5-4]: выравнивание адреса источника (5) и получателя (4). После каждого блока данных (бурста):
				;            если значение %0 - адрес (источника/получателя) остаётся тот же,
				;	     если значение %1 - младшие часть адреса (#--xx ?) инициализируется в изначально заданное значение,
				;                            а сташая часть адреса (#xx-- ?) увеличивается на 1
				;   [3]:   если работа DMA, то это определяет размер выравнивания адреса:
				;            %0 - выравнивание 256 байт (8 младших бит адреса) 
				;            %1 - выравнивание 512 байт (9 младших бит адреса)
				;
				;          если работа Blitter, то это определяет режим работы:
				;            %0 - 4 бита на точку, прозрачный цвет №0 из 16 цветов
				;            %1 - 8 бит на точку, прозрачный цвет №0 из 256 цветов
				;   [2-0]: режим работы DMA:
				;		~R/W источник получатель
				;	   %000	  0	-	-	reserved
				;	   %000	  1	-	-	reserved
				;	   %001	  0	RAM	RAM	Копируются данные из одной части памяти (источник) в другую (получатель)
				;	   %001	  1	BLT	RAM	Blitter: Копируются данные из одной части памяти (источник) в другую (получатель)
				;					         если значение не равно нулю.
				;	   %010	  0	SPI	RAM	Копируются данные из интерфейса SPI(источник, SD Card) в область памяти (получатель)
				;	   %010	  1	RAM	SPI	Копируются данные из памяти (источник) в интерфейс SPI(получатель, SD Card)
				;	   %011	  0	IDE	RAM	Копируются данные из интерфейса IDE(источник, HDD) в область памяти (получатель)
				;	   %011	  1	RAM	IDE	Копируются данные из памяти (источник) в интерфейс IDE(получатель, HDD)
				;	   %100	  0	FILL	RAM	Заливается область памяти (получатель), словом (#xxxx) расположенным в источнике
				;	   %100	  1	RAM	CRAM	Копируются данные из памяти (источник) в CRAM (получатель) ???
				;	   %101	  0	-	-	reserved
				;	   %101	  1	RAM	SFILE	Копируются данные из памяти (источник) в SFILE (получатель)
				;	   %110	  0	-	-	reserved
				;	   %110	  1	-	-	reserved
				;	   %111	  0	-	-	reserved
				;	   %111	  1	-	-	reserved

tsDMAstatus	equ	#27af	; чтение статуса готовности DMA:
				; o: A
				;   [7]:   если установлен в 1, то DMA занято.
				;	   LD BC,#27af	; задаём порт
				;          INF		; читаем данные в «никуда» и выставляем флаги © Blade
				;	   JP M,$-2	; ожидание готовности. и не важно чо там 1 значит © Koshi
				;			; $-2 лучше так не делать! иначе вечный висяк гарантирован! © Breeze
				;			; не забываем про таймауты!

tsDMAnum	equ	#28af	; задать количество передаваемых блоков (бурстов)
				; i: A  - 1-255

tsFDDvirt	equ	#29af	; задать виртуальные дисководы tr-dos:
				; i: A
				;   [3]:   Разрешить(1) / Запретить(0) виртуальный дисковод D
				;   [2]:   Разрешить(1) / Запретить(0) виртуальный дисковод C
				;   [1]:   Разрешить(1) / Запретить(0) виртуальный дисковод B
				;   [0]:   Разрешить(1) / Запретить(0) виртуальный дисковод A

tsIntMask	equ	#2aaf	; управление прерываниями
				; i: A
				;   [2]:   Разрешить(1) / Запретить(0) прерывание во время вызова DMA
				;   [1]:   Разрешить(1) / Запретить(0) прерывание с каждой новой строкой
				;   [0]:   Разрешить(1) / Запретить(0) прерывание с каждый фрейм (обычный)

tsCacheConfig	equ	#2baf	; управление кешем для конкретных областей памяти
				; i: A
				;   [3]:   Разрешить(1) / Запретить(0) кеш для области памяти с #c000
				;   [2]:   Разрешить(1) / Запретить(0) кеш для области памяти с #8000
				;   [1]:   Разрешить(1) / Запретить(0) кеш для области памяти с #4000
				;   [0]:   Разрешить(1) / Запретить(0) кеш для области памяти с #0000

				; задать смещение тайловой плоскости 0 по оси Х(0-511):
				; i: A
tsT0XoffsL	equ	#40af	;   [7-0]: младшая часть
tsT0XoffsH	equ	#41af	;   [0]:   старшая часть
				
				; задать смещение тайловой плоскости 0 по оси Y(0-511):
				; i: A
tsT0YoffsL	equ	#42af	;   [7-0]: младшая часть
tsT0YoffsH	equ	#43af	;   [0]:   старшая часть

				; задать смещение тайловой плоскости 1 по оси Х(0-511):
				; i: A
tsT1XoffsL	equ	#44af	;   [7-0]: младшая часть
tsT1XoffsH	equ	#45af	;   [0]:   старшая часть

				; задать смещение тайловой плоскости 1 по оси Y(0-511):
				; i: A
tsT1YoffsL	equ	#46af	;   [7-0]: младшая часть
tsT1YoffsH	equ	#47af	;   [0]:   старшая часть

;---------------------------------------
; PentEvo Configuration API Header
;---------------------------------------

peNvRamAccess	equ	#eff7	; управление доступом к ячейкам NvRam
				; i: A
				;   [7]:   Разрешить(1) / Запретить(0) доступ
peNvRamLocation	equ	#dff7	; задать номер ячейки NvRam с которой будет вестись работа
				; i: A - номер ячейки (от 0 - 255) 
peNvRamData	equ	#bff7	; работа с данными ячеек NvRam
				; i: A - прочитать данные из ячейки заданной в peNvRamLocation
				; o: A - записать данные в ячейку заданную в peNvRamLocation
