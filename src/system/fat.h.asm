;---------------------------------------
; CLi² (Command Line Interface)
; 2016 © breeze/fishbone crew
;---------------------------------------
; Koshi FAT32 Driver API Header
;---------------------------------------
/*
Файловая запись FAT32 состоит из следующих структур:

          DIR_Name. 11-байтное поле по относительному адресу 0, содержит короткое имя файла (в рамках стандарта 8.3).
          DIR_Attr. 1 байт по адресу 0x0B, отвечающий за атрибуты файла.
         DIR_NTRes. 1 байт по адресу 0x0C, используется в Windows NT.
  DIR_CrtTimeTenth. 1 байт по адресу 0x0D. Счётчик десятков миллисекунд времени создания файла,
                    допустимы значения 0-199. Поле часто неоправданно игнорируется.
       DIR_CrtTime. 2 байта по адресу 0x0E. Время создания файла с точностью до 2 секунд.
       DIR_CrtDate. 2 байта по адресу 0x10. Дата создания файла.
    DIR_LstAccDate. 2 байта по адресу 0x12. Дата последнего доступа к файлу (то есть последнего чтения или записи —
                    в последнем случае приравнивается DIR_WrtDate). Аналогичное поле для времени не предусмотрено.
     DIR_FstClusHI. 2 байта по адресу 0x14. Номер первого кластера файла (старшее слово, на томе FAT12/FAT16 равен нулю).
       DIR_WrtTime. 2 байта по адресу 0x16. Время последней записи (модификации) файла, например, его создания.
       DIR_WrtDate. 2 байта по адресу 0x18. Дата последней записи (модификации) файла, в том числе создания.
     DIR_FstClusLO. 2 байта по адресу 0x1A. Номер первого кластера файла (младшее слово).
      DIR_FileSize. DWORD, содержащий значение размера файла в байтах. Фундаментальное ограничение FAT32 —
                    максимально допустимое значение размера файла составляет 0xFFFFFFFF (то есть 4 Гб минус 1 байт).

Если первый байт записи FAT (то есть DIR_Name[0]) содержит 0xE5 или 0x05, это значит, что запись свободна(соответствующий файл был удалён).
Ноль в DIR_Name[0] означает, что свободна не только эта запись, но и все следующие записи каталога;
Windows не анализирует остаток каталога после обнулённой записи.
*/
;---------------------------------------
fStart				equ	#2002		; Начальная точка входа в FAT Driver
;---------------------------------------
fLoad512			equ	#15		; +21: Потоковая загрузка файла
							; i:HL - Адрес загрузки файла в память (должен быть кратный 2!)
							;    C - Банк памяти, куда будет загружен файл
							;    B - Длина в блоках по 512байт
							; o:C,HL - Новое значение (банка + адрес)
							;   A = #0f - конец данных

fSave512			equ	#18		; +24: Потоковая запись файла
							; i:HL - Адрес сохранения файла из памяти (должен быть кратный 2!)
							;    C - Банк памяти, откуда будет сохранён файл
							;    B - Длина в блоках по 512байт
							; o:C,HL - Новое значение (банка + адрес)

fMkFile				equ	#39		; +57: Создание файла в активном каталоге
							; i:HL - флаг(1), длина(4), имя(1-255), окончание #00
							; o:NZ - Ошибка (не достаточно свободного места)
							;        A: 1 - не верная длина
							;           2 - index fatality
							;           3 - файл уже существует
							;         255 - неизвестная ошибка
							;    Z - Файл успешно создан
							;        После создания файла происходит позиционирование
							;	 на его начало!!!

fMkDir				equ	#3C		; +60: Создание каталога в активной директории
							; i:HL -имя(1-255), окончание #00
							; o:NZ - Операция завершилась ошибкой
							;    Z - Директория успешно создана

fDelete				equ	#3F		; +63: Удаление файла в активной директории
							; i: HL - флаг(1), имя(1-255), окончание #00
							;        флаг:#00 - файл
							;	      #10 - директория
							; o:  Z - файл не найден
							;    NZ - файл успешно удалён

fRename				equ	#42		; +66: Переименование файла в активной директории
							; i: HL - флаг(1), старое имя(1-255), окончание #00
							;    DE - флаг(1), новое имя(1-255), окончание #00
							; o:  Z - файл не найден
							;    NZ - файл успешно переименован

fFentry				equ	#4E		; +78: Поиск файла/каталога в активной директории
							; i:HL - флаг(1), имя(1-255), окончание #00
							;        флаг:#00 - файл
							;	      #10 - директория
							; o: Z - файл/директория не найдены
							;    NZ - SEEK0 автоматически вызван
							;    [DE,HL] - длина файла

fSeekSkip			equ	#54		; +84: Найти/пропустить N секторов файла
							; i: B - Количество секторов

fGetNextEntryDir		equ	#57		; +87: Прочитать по указанному адресу следующую запись из
							;      активной директории.
							; i: DE - адрес буфера куда будет прочитана информация о записи
							;         в следующем формате:
							;         +000: 4 байта - fclus (???)
							;         +004: 4 байта - size (размер файла)
							;         +008: 2 байта - date (дата создания файла)
							;		<------- +009 --------> <------- +008 -------->
							;		15 14 13 12 11 10 09 08 07 06 05 04 03 02 01 00
							;		y  y  y  y  y  y  y  m  m  m  m  d  d  d  d  d
							;		где: yyyyyyy - 7 бит смещение относильено 1980 года (1980-2099)
							;		        mmmm - 4 бита месяц (1-12)
							;		       ddddd - 5 бит день (1-31)
							;         +010: 2 байта - time (время создания файла)
							;		<------- +011 --------> <------- +010 -------->
							;		15 14 13 12 11 10 09 08 07 06 05 04 03 02 01 00
							;		h  h  h  h  h  m  m  m  m  m  m  s  s  s  s  s
							;		где:  hhhhh - 5 бит часы (0-23)
							;		     mmmmmm - 6 бит минуты (0-59)
							;		     ssssss - 6 бит секунды (0-59)
							;         +012: 1 байта - attr (Атрибуты файла):
							;                   bit 0 - R только для чтения 
							;                   bit 1 - H скрытый 
							;                   bit 2 - S системный
							;                   bit 3 - T эта запись ID тома
							;                   bit 4 - D каталог 
							;                   bit 5 - A архивный
							;                   bit 6 - X зарезервировано и всегда 0
							;                   bit 7 - X зарезервировано и всегда 0
							;         +013: 1-255 байт - name (имя файла)
							;	           +1 байт - заканчивается кодом #00
							; o: DE - следующий адерес
							;     Z - конец директории
							;    NZ - данные успешно прочитаны

fSetDir				equ	#5d		; +93: Сделать найденный каталог активным
							;      (вызывается после FENTRY!)

fSetRoot			equ	#60		; +96: установить Root директорию активной

fSeek0				equ	#63		; +99: Выставить указатель на начало найденного файла
